import"./modulepreload-polyfill.b7f2da20.js";import{c as A}from"./waveform.f9b347fa.js";import{S as g,K as h}from"./Drum.dc24de8a.js";const l=document.querySelector("#play"),u=document.querySelector("#filteredNoise"),d=document.querySelector("#kick"),m=document.querySelector("#snare"),T=document.querySelector("#highHat"),f=document.querySelector("#A4NoEnvelope"),p=document.querySelector("#A4Envelope"),E=document.querySelector("#fourFourtyDemo"),q=document.querySelector("#canvas"),e=new AudioContext;E==null||E.addEventListener("click",()=>{e.resume().then(()=>{const t=new OscillatorNode(e,{type:"sine",frequency:440});t.connect(e.destination),t.start(),t.stop(e.currentTime+1)})});const y=e.createGain();y.connect(e.destination);l==null||l.addEventListener("click",()=>{const o=e.createBuffer(1,e.sampleRate*2,e.sampleRate),n=o.getChannelData(0);for(let a=0;a<o.length;a++)n[a]=Math.random()*2-1;const c=e.createBufferSource();c.buffer=o,c.connect(e.destination),c.start()});u==null||u.addEventListener("click",()=>{const o=e.createBuffer(1,e.sampleRate*2,e.sampleRate),n=o.getChannelData(0);for(let r=0;r<o.length;r++)n[r]=Math.random()*2-1;const c=e.createBufferSource();c.buffer=o;const a=new BiquadFilterNode(e,{type:"lowpass",frequency:1500});c.connect(a),a.connect(y),c.start()});m==null||m.addEventListener("click",()=>{new g(e).trigger(e.currentTime)});T==null||T.addEventListener("click",()=>{const t=new GainNode(e),o=.02;t.gain.value=0,t.gain.linearRampToValueAtTime(1,e.currentTime+o),t.gain.linearRampToValueAtTime(0,e.currentTime+o+.08);const n=e.createBiquadFilter();n.type="highpass",n.frequency.value=4e3,n.connect(t),t.connect(e.destination);const c=.1,a=e.createBuffer(1,e.sampleRate*c,e.sampleRate),r=a.getChannelData(0);for(let i=0;i<a.length;i++)r[i]=Math.random()*2-1;const s=e.createBufferSource();s.buffer=a,s.connect(n),A(s,e,q),s.start()});d==null||d.addEventListener("click",()=>{new h(e).trigger(e.currentTime)});const S=.2,v=.3,N=.7,_=.2,C=(t,o)=>{const n=new GainNode(t),c=t.currentTime;return n.gain.setValueAtTime(0,0),n.gain.linearRampToValueAtTime(1,c+S),n.gain.linearRampToValueAtTime(N,c+S+v),n.gain.setValueAtTime(N,c+1-_),n.gain.linearRampToValueAtTime(0,c+1),o.connect(n)};f==null||f.addEventListener("click",()=>{e.resume().then(()=>{const t=new OscillatorNode(e,{frequency:440,type:"square"});t.connect(e.destination),t.start(),t.stop(e.currentTime+1)})});p==null||p.addEventListener("click",()=>{e.resume().then(()=>{const t=new OscillatorNode(e,{frequency:440,type:"square"});C(e,t).connect(e.destination),t.start(),t.stop(e.currentTime+1)})});
