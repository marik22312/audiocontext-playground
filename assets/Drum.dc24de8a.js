var l=Object.defineProperty;var h=(i,t,e)=>t in i?l(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var o=(i,t,e)=>(h(i,typeof t!="symbol"?t+"":t,e),e);class c{constructor(t){o(this,"oscillator");o(this,"gain");this.audioContext=t}setup(){this.oscillator=new OscillatorNode(this.audioContext),this.gain=new GainNode(this.audioContext),this.oscillator.connect(this.gain),this.gain.connect(this.audioContext.destination)}trigger(t){this.setup(),!(!this.oscillator||!this.gain)&&(this.oscillator.frequency.setValueAtTime(150,t),this.gain.gain.setValueAtTime(1,t),this.oscillator.frequency.exponentialRampToValueAtTime(.01,t+.5),this.gain.gain.exponentialRampToValueAtTime(.01,t+.5),this.oscillator.start(t),this.oscillator.stop(t+.5))}}class u{constructor(t){o(this,"noiseBuffer");o(this,"noise");o(this,"noiseEnvelope");o(this,"oscillator");o(this,"oscEnvelope");this.audioContext=t;let e=this.audioContext.sampleRate;const n=new AudioBuffer({numberOfChannels:1,length:e,sampleRate:this.audioContext.sampleRate});let a=n.getChannelData(0);for(let s=0;s<e;s++)a[s]=Math.random()*2-1;this.noiseBuffer=n}setup(){this.noise=new AudioBufferSourceNode(this.audioContext,{buffer:this.noiseBuffer});let t=new BiquadFilterNode(this.audioContext,{type:"highpass",frequency:1e3});this.noise.connect(t),this.noiseEnvelope=new GainNode(this.audioContext),t.connect(this.noiseEnvelope),this.noiseEnvelope.connect(this.audioContext.destination),this.oscillator=new OscillatorNode(this.audioContext,{type:"triangle"}),this.oscEnvelope=new GainNode(this.audioContext),this.oscillator.connect(this.oscEnvelope),this.oscEnvelope.connect(this.audioContext.destination)}trigger(t){this.setup(),this.noiseEnvelope.gain.setValueAtTime(1,t),this.noiseEnvelope.gain.exponentialRampToValueAtTime(.01,t+.2),this.noise.start(t),this.oscillator.frequency.setValueAtTime(100,t),this.oscEnvelope.gain.setValueAtTime(.7,t),this.oscEnvelope.gain.exponentialRampToValueAtTime(.01,t+.1),this.oscillator.start(t),this.oscillator.stop(t+.2),this.noise.stop(t+.2)}}export{c as K,u as S};
