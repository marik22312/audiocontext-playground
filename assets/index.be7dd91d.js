var w=Object.defineProperty;var x=(t,e,s)=>e in t?w(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var c=(t,e,s)=>(x(t,typeof e!="symbol"?e+"":e,s),s);const R=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function s(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerpolicy&&(r.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?r.credentials="include":o.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(o){if(o.ep)return;o.ep=!0;const r=s(o);fetch(o.href,r)}};R();const E=500,y=150,q=(t,e,s)=>{const i=s.getContext("2d"),o=new AnalyserNode(e,{fftSize:2048});if(!i)return console.error("Could not get canvas context"),{analyser:o};t.connect(o);var r=new Uint8Array(o.fftSize);return i.clearRect(0,0,E,y),S(s,o,r,o.fftSize),{analyser:o}},S=(t,e,s,i)=>{requestAnimationFrame(()=>S(t,e,s,e.fftSize)),e.getByteTimeDomainData(s),L(t,i,s)};function L(t,e,s){const i=t.getContext("2d");if(!i)return console.error("Could not get canvas context"),alert("Could not get canvas context");i.fillStyle="#222",i.fillRect(0,0,E,y),i.lineWidth=2,i.strokeStyle="#fff",i.beginPath();for(var o=E*1/e,r=0,a=0;a<e;a++){var l=s[a]/128,N=l*y/2;a===0?i.moveTo(r,N):i.lineTo(r,N),r+=o}i.lineTo(t.width,t.height/2),i.stroke()}class O{constructor(e){c(this,"oscillator");c(this,"gain");this.audioContext=e}setup(){this.oscillator=new OscillatorNode(this.audioContext),this.gain=new GainNode(this.audioContext),this.oscillator.connect(this.gain),this.gain.connect(this.audioContext.destination)}trigger(e){this.setup(),!(!this.oscillator||!this.gain)&&(this.oscillator.frequency.setValueAtTime(150,e),this.gain.gain.setValueAtTime(1,e),this.oscillator.frequency.exponentialRampToValueAtTime(.01,e+.5),this.gain.gain.exponentialRampToValueAtTime(.01,e+.5),this.oscillator.start(e),this.oscillator.stop(e+.5))}}class V{constructor(e){c(this,"noiseBuffer");c(this,"noise");c(this,"noiseEnvelope");c(this,"oscillator");c(this,"oscEnvelope");this.audioContext=e;let s=this.audioContext.sampleRate;const i=new AudioBuffer({numberOfChannels:1,length:s,sampleRate:this.audioContext.sampleRate});let o=i.getChannelData(0);for(let r=0;r<s;r++)o[r]=Math.random()*2-1;this.noiseBuffer=i}setup(){this.noise=new AudioBufferSourceNode(this.audioContext,{buffer:this.noiseBuffer});let e=new BiquadFilterNode(this.audioContext,{type:"highpass",frequency:1e3});this.noise.connect(e),this.noiseEnvelope=new GainNode(this.audioContext),e.connect(this.noiseEnvelope),this.noiseEnvelope.connect(this.audioContext.destination),this.oscillator=new OscillatorNode(this.audioContext,{type:"triangle"}),this.oscEnvelope=new GainNode(this.audioContext),this.oscillator.connect(this.oscEnvelope),this.oscEnvelope.connect(this.audioContext.destination)}trigger(e){this.setup(),this.noiseEnvelope.gain.setValueAtTime(1,e),this.noiseEnvelope.gain.exponentialRampToValueAtTime(.01,e+.2),this.noise.start(e),this.oscillator.frequency.setValueAtTime(100,e),this.oscEnvelope.gain.setValueAtTime(.7,e),this.oscEnvelope.gain.exponentialRampToValueAtTime(.01,e+.1),this.oscillator.start(e),this.oscillator.stop(e+.2),this.noise.stop(e+.2)}}const u=document.querySelector("#play"),d=document.querySelector("#filteredNoise"),f=document.querySelector("#kick"),h=document.querySelector("#snare"),p=document.querySelector("#highHat"),m=document.querySelector("#A4NoEnvelope"),T=document.querySelector("#A4Envelope"),g=document.querySelector("#fourFourtyDemo"),_=document.querySelector("#canvas"),n=new AudioContext;g==null||g.addEventListener("click",()=>{n.resume().then(()=>{const t=new OscillatorNode(n,{type:"sine",frequency:440});t.connect(n.destination),t.start(),t.stop(n.currentTime+1)})});const A=n.createGain();A.connect(n.destination);u==null||u.addEventListener("click",()=>{const e=n.createBuffer(1,n.sampleRate*2,n.sampleRate),s=e.getChannelData(0);for(let o=0;o<e.length;o++)s[o]=Math.random()*2-1;const i=n.createBufferSource();i.buffer=e,i.connect(n.destination),i.start()});d==null||d.addEventListener("click",()=>{const e=n.createBuffer(1,n.sampleRate*2,n.sampleRate),s=e.getChannelData(0);for(let r=0;r<e.length;r++)s[r]=Math.random()*2-1;const i=n.createBufferSource();i.buffer=e;const o=new BiquadFilterNode(n,{type:"lowpass",frequency:1500});i.connect(o),o.connect(A),i.start()});h==null||h.addEventListener("click",()=>{new V(n).trigger(n.currentTime)});p==null||p.addEventListener("click",()=>{const t=new GainNode(n),e=.02;t.gain.value=0,t.gain.linearRampToValueAtTime(1,n.currentTime+e),t.gain.linearRampToValueAtTime(0,n.currentTime+e+.08);const s=n.createBiquadFilter();s.type="highpass",s.frequency.value=4e3,s.connect(t),t.connect(n.destination);const i=.1,o=n.createBuffer(1,n.sampleRate*i,n.sampleRate),r=o.getChannelData(0);for(let l=0;l<o.length;l++)r[l]=Math.random()*2-1;const a=n.createBufferSource();a.buffer=o,a.connect(s),q(a,n,_),a.start()});f==null||f.addEventListener("click",()=>{new O(n).trigger(n.currentTime)});const v=.2,D=.3,C=.7,k=.2,G=(t,e)=>{const s=new GainNode(t),i=t.currentTime;return s.gain.setValueAtTime(0,0),s.gain.linearRampToValueAtTime(1,i+v),s.gain.linearRampToValueAtTime(C,i+v+D),s.gain.setValueAtTime(C,i+1-k),s.gain.linearRampToValueAtTime(0,i+1),e.connect(s)};m==null||m.addEventListener("click",()=>{n.resume().then(()=>{const t=new OscillatorNode(n,{frequency:440,type:"square"});t.connect(n.destination),t.start(),t.stop(n.currentTime+1)})});T==null||T.addEventListener("click",()=>{n.resume().then(()=>{const t=new OscillatorNode(n,{frequency:440,type:"square"});G(n,t).connect(n.destination),t.start(),t.stop(n.currentTime+1)})});
